# AUTOGENERATED BY create_visitor.py
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from treeno.datatypes.types import DataType
    from treeno.expression import (
        Add,
        AliasedStar,
        AliasedValue,
        And,
        Array,
        Between,
        Case,
        Cast,
        DistinctFrom,
        Divide,
        Else,
        Equal,
        Field,
        GreaterThan,
        GreaterThanOrEqual,
        InList,
        InQuery,
        Interval,
        IsNull,
        Lambda,
        LessThan,
        LessThanOrEqual,
        Like,
        Literal,
        Minus,
        Modulus,
        Multiply,
        Negative,
        Not,
        NotEqual,
        Or,
        Positive,
        RowConstructor,
        Star,
        Subscript,
        TryCast,
        TypeConstructor,
        Variable,
        When,
    )
    from treeno.functions.aggregate import (
        ApproxDistinct,
        ApproxMostFrequent,
        ApproxPercentile,
        ApproxSet,
        Arbitrary,
        ArrayAgg,
        Avg,
        BitwiseAndAgg,
        BitwiseOrAgg,
        BoolAnd,
        BoolOr,
        Checksum,
        Corr,
        Count,
        CountIf,
        CovarPop,
        CovarSamp,
        Every,
        GeometricMean,
        Histogram,
        Kurtosis,
        ListAgg,
        MapAgg,
        MapUnion,
        Max,
        MaxBy,
        Merge,
        Min,
        MinBy,
        MultiMapAgg,
        NumericHistogram,
        OverflowFiller,
        QDigestAgg,
        RegrIntercept,
        RegrSlope,
        Skewness,
        StdDev,
        StdDevPop,
        StdDevSamp,
        Sum,
        TDigestAgg,
        Variance,
        VarPop,
        VarSamp,
    )
    from treeno.functions.common import Concatenate
    from treeno.functions.conditional import Coalesce, If, NullIf, Try
    from treeno.functions.datetime import (
        AtTimezone,
        CurrentDate,
        CurrentTime,
        CurrentTimestamp,
        Date,
        DateAdd,
        DateDiff,
        DateTrunc,
        FromISO8601Date,
        FromISO8601Timestamp,
        FromISO8601TimestampNanos,
        FromUnixtime,
        FromUnixtimeNanos,
        HumanReadableSeconds,
        LastDayOfMonth,
        LocalTime,
        LocalTimestamp,
        Now,
        ParseDuration,
        ToISO8601,
        ToMilliseconds,
        ToUnixtime,
        WithTimezone,
    )
    from treeno.functions.math import Power
    from treeno.functions.session import (
        CurrentCatalog,
        CurrentPath,
        CurrentSchema,
        CurrentUser,
    )
    from treeno.functions.string import (
        Chr,
        CodePoint,
        FromUTF8,
        HammingDistance,
        Length,
        LevenshteinDistance,
        Lower,
        LPad,
        LTrim,
        LuhnCheck,
        Normalize,
        Replace,
        Reverse,
        RPad,
        RTrim,
        Soundex,
        ToUTF8,
    )
    from treeno.groupby import (
        Cube,
        GroupBy,
        GroupingSet,
        GroupingSetList,
        Rollup,
    )
    from treeno.orderby import OrderTerm
    from treeno.relation import (
        AliasedRelation,
        ExceptQuery,
        IntersectQuery,
        Join,
        JoinConfig,
        JoinOnCriteria,
        JoinUsingCriteria,
        Lateral,
        SelectQuery,
        Table,
        TableQuery,
        TableSample,
        UnionQuery,
        Unnest,
        ValuesQuery,
    )
    from treeno.window import (
        BoundedFrameBound,
        CurrentFrameBound,
        UnboundedFrameBound,
        Window,
    )


class TreenoVisitor:
    def visit_LuhnCheck(node: "LuhnCheck") -> None:
        pass

    def visit_FromISO8601TimestampNanos(
        node: "FromISO8601TimestampNanos",
    ) -> None:
        pass

    def visit_Lower(node: "Lower") -> None:
        pass

    def visit_MapAgg(node: "MapAgg") -> None:
        pass

    def visit_Between(node: "Between") -> None:
        pass

    def visit_Count(node: "Count") -> None:
        pass

    def visit_HammingDistance(node: "HammingDistance") -> None:
        pass

    def visit_ApproxPercentile(node: "ApproxPercentile") -> None:
        pass

    def visit_Case(node: "Case") -> None:
        pass

    def visit_Max(node: "Max") -> None:
        pass

    def visit_HumanReadableSeconds(node: "HumanReadableSeconds") -> None:
        pass

    def visit_LocalTimestamp(node: "LocalTimestamp") -> None:
        pass

    def visit_CurrentCatalog(node: "CurrentCatalog") -> None:
        pass

    def visit_BoolOr(node: "BoolOr") -> None:
        pass

    def visit_ExceptQuery(node: "ExceptQuery") -> None:
        pass

    def visit_And(node: "And") -> None:
        pass

    def visit_ToUTF8(node: "ToUTF8") -> None:
        pass

    def visit_GreaterThan(node: "GreaterThan") -> None:
        pass

    def visit_Variable(node: "Variable") -> None:
        pass

    def visit_VarSamp(node: "VarSamp") -> None:
        pass

    def visit_Join(node: "Join") -> None:
        pass

    def visit_ToMilliseconds(node: "ToMilliseconds") -> None:
        pass

    def visit_JoinUsingCriteria(node: "JoinUsingCriteria") -> None:
        pass

    def visit_RegrIntercept(node: "RegrIntercept") -> None:
        pass

    def visit_RowConstructor(node: "RowConstructor") -> None:
        pass

    def visit_Subscript(node: "Subscript") -> None:
        pass

    def visit_ApproxDistinct(node: "ApproxDistinct") -> None:
        pass

    def visit_Arbitrary(node: "Arbitrary") -> None:
        pass

    def visit_NullIf(node: "NullIf") -> None:
        pass

    def visit_Not(node: "Not") -> None:
        pass

    def visit_UnboundedFrameBound(node: "UnboundedFrameBound") -> None:
        pass

    def visit_FromUnixtime(node: "FromUnixtime") -> None:
        pass

    def visit_StdDevPop(node: "StdDevPop") -> None:
        pass

    def visit_ValuesQuery(node: "ValuesQuery") -> None:
        pass

    def visit_MinBy(node: "MinBy") -> None:
        pass

    def visit_TableSample(node: "TableSample") -> None:
        pass

    def visit_MapUnion(node: "MapUnion") -> None:
        pass

    def visit_RTrim(node: "RTrim") -> None:
        pass

    def visit_AliasedValue(node: "AliasedValue") -> None:
        pass

    def visit_GroupingSet(node: "GroupingSet") -> None:
        pass

    def visit_DateAdd(node: "DateAdd") -> None:
        pass

    def visit_Like(node: "Like") -> None:
        pass

    def visit_CovarPop(node: "CovarPop") -> None:
        pass

    def visit_FromISO8601Date(node: "FromISO8601Date") -> None:
        pass

    def visit_CountIf(node: "CountIf") -> None:
        pass

    def visit_OverflowFiller(node: "OverflowFiller") -> None:
        pass

    def visit_QDigestAgg(node: "QDigestAgg") -> None:
        pass

    def visit_OrderTerm(node: "OrderTerm") -> None:
        pass

    def visit_Power(node: "Power") -> None:
        pass

    def visit_Replace(node: "Replace") -> None:
        pass

    def visit_Date(node: "Date") -> None:
        pass

    def visit_Array(node: "Array") -> None:
        pass

    def visit_Or(node: "Or") -> None:
        pass

    def visit_Positive(node: "Positive") -> None:
        pass

    def visit_Length(node: "Length") -> None:
        pass

    def visit_GreaterThanOrEqual(node: "GreaterThanOrEqual") -> None:
        pass

    def visit_DataType(node: "DataType") -> None:
        pass

    def visit_ToUnixtime(node: "ToUnixtime") -> None:
        pass

    def visit_Cube(node: "Cube") -> None:
        pass

    def visit_CurrentTime(node: "CurrentTime") -> None:
        pass

    def visit_LPad(node: "LPad") -> None:
        pass

    def visit_ArrayAgg(node: "ArrayAgg") -> None:
        pass

    def visit_FromUTF8(node: "FromUTF8") -> None:
        pass

    def visit_Lambda(node: "Lambda") -> None:
        pass

    def visit_Concatenate(node: "Concatenate") -> None:
        pass

    def visit_Modulus(node: "Modulus") -> None:
        pass

    def visit_Unnest(node: "Unnest") -> None:
        pass

    def visit_FromUnixtimeNanos(node: "FromUnixtimeNanos") -> None:
        pass

    def visit_ApproxSet(node: "ApproxSet") -> None:
        pass

    def visit_StdDevSamp(node: "StdDevSamp") -> None:
        pass

    def visit_RegrSlope(node: "RegrSlope") -> None:
        pass

    def visit_Add(node: "Add") -> None:
        pass

    def visit_SelectQuery(node: "SelectQuery") -> None:
        pass

    def visit_When(node: "When") -> None:
        pass

    def visit_CurrentSchema(node: "CurrentSchema") -> None:
        pass

    def visit_AtTimezone(node: "AtTimezone") -> None:
        pass

    def visit_Every(node: "Every") -> None:
        pass

    def visit_Try(node: "Try") -> None:
        pass

    def visit_CurrentFrameBound(node: "CurrentFrameBound") -> None:
        pass

    def visit_Minus(node: "Minus") -> None:
        pass

    def visit_Chr(node: "Chr") -> None:
        pass

    def visit_Soundex(node: "Soundex") -> None:
        pass

    def visit_Histogram(node: "Histogram") -> None:
        pass

    def visit_Star(node: "Star") -> None:
        pass

    def visit_JoinOnCriteria(node: "JoinOnCriteria") -> None:
        pass

    def visit_TypeConstructor(node: "TypeConstructor") -> None:
        pass

    def visit_CovarSamp(node: "CovarSamp") -> None:
        pass

    def visit_ApproxMostFrequent(node: "ApproxMostFrequent") -> None:
        pass

    def visit_LastDayOfMonth(node: "LastDayOfMonth") -> None:
        pass

    def visit_DateDiff(node: "DateDiff") -> None:
        pass

    def visit_Cast(node: "Cast") -> None:
        pass

    def visit_ListAgg(node: "ListAgg") -> None:
        pass

    def visit_IsNull(node: "IsNull") -> None:
        pass

    def visit_Negative(node: "Negative") -> None:
        pass

    def visit_AliasedRelation(node: "AliasedRelation") -> None:
        pass

    def visit_LessThan(node: "LessThan") -> None:
        pass

    def visit_DateTrunc(node: "DateTrunc") -> None:
        pass

    def visit_Reverse(node: "Reverse") -> None:
        pass

    def visit_Literal(node: "Literal") -> None:
        pass

    def visit_CurrentTimestamp(node: "CurrentTimestamp") -> None:
        pass

    def visit_InQuery(node: "InQuery") -> None:
        pass

    def visit_TDigestAgg(node: "TDigestAgg") -> None:
        pass

    def visit_BitwiseAndAgg(node: "BitwiseAndAgg") -> None:
        pass

    def visit_IntersectQuery(node: "IntersectQuery") -> None:
        pass

    def visit_Interval(node: "Interval") -> None:
        pass

    def visit_Avg(node: "Avg") -> None:
        pass

    def visit_Table(node: "Table") -> None:
        pass

    def visit_Equal(node: "Equal") -> None:
        pass

    def visit_Rollup(node: "Rollup") -> None:
        pass

    def visit_Now(node: "Now") -> None:
        pass

    def visit_Merge(node: "Merge") -> None:
        pass

    def visit_Variance(node: "Variance") -> None:
        pass

    def visit_If(node: "If") -> None:
        pass

    def visit_Lateral(node: "Lateral") -> None:
        pass

    def visit_GeometricMean(node: "GeometricMean") -> None:
        pass

    def visit_LTrim(node: "LTrim") -> None:
        pass

    def visit_LevenshteinDistance(node: "LevenshteinDistance") -> None:
        pass

    def visit_CurrentUser(node: "CurrentUser") -> None:
        pass

    def visit_Multiply(node: "Multiply") -> None:
        pass

    def visit_CodePoint(node: "CodePoint") -> None:
        pass

    def visit_Skewness(node: "Skewness") -> None:
        pass

    def visit_MaxBy(node: "MaxBy") -> None:
        pass

    def visit_Else(node: "Else") -> None:
        pass

    def visit_TableQuery(node: "TableQuery") -> None:
        pass

    def visit_FromISO8601Timestamp(node: "FromISO8601Timestamp") -> None:
        pass

    def visit_CurrentDate(node: "CurrentDate") -> None:
        pass

    def visit_Window(node: "Window") -> None:
        pass

    def visit_DistinctFrom(node: "DistinctFrom") -> None:
        pass

    def visit_Checksum(node: "Checksum") -> None:
        pass

    def visit_MultiMapAgg(node: "MultiMapAgg") -> None:
        pass

    def visit_LessThanOrEqual(node: "LessThanOrEqual") -> None:
        pass

    def visit_Normalize(node: "Normalize") -> None:
        pass

    def visit_AliasedStar(node: "AliasedStar") -> None:
        pass

    def visit_JoinConfig(node: "JoinConfig") -> None:
        pass

    def visit_Min(node: "Min") -> None:
        pass

    def visit_Kurtosis(node: "Kurtosis") -> None:
        pass

    def visit_CurrentPath(node: "CurrentPath") -> None:
        pass

    def visit_ParseDuration(node: "ParseDuration") -> None:
        pass

    def visit_LocalTime(node: "LocalTime") -> None:
        pass

    def visit_TryCast(node: "TryCast") -> None:
        pass

    def visit_BitwiseOrAgg(node: "BitwiseOrAgg") -> None:
        pass

    def visit_BoolAnd(node: "BoolAnd") -> None:
        pass

    def visit_NotEqual(node: "NotEqual") -> None:
        pass

    def visit_ToISO8601(node: "ToISO8601") -> None:
        pass

    def visit_NumericHistogram(node: "NumericHistogram") -> None:
        pass

    def visit_VarPop(node: "VarPop") -> None:
        pass

    def visit_Coalesce(node: "Coalesce") -> None:
        pass

    def visit_RPad(node: "RPad") -> None:
        pass

    def visit_Field(node: "Field") -> None:
        pass

    def visit_InList(node: "InList") -> None:
        pass

    def visit_Corr(node: "Corr") -> None:
        pass

    def visit_UnionQuery(node: "UnionQuery") -> None:
        pass

    def visit_Sum(node: "Sum") -> None:
        pass

    def visit_WithTimezone(node: "WithTimezone") -> None:
        pass

    def visit_Divide(node: "Divide") -> None:
        pass

    def visit_BoundedFrameBound(node: "BoundedFrameBound") -> None:
        pass

    def visit_StdDev(node: "StdDev") -> None:
        pass

    def visit_GroupingSetList(node: "GroupingSetList") -> None:
        pass

    def visit_GroupBy(node: "GroupBy") -> None:
        pass
